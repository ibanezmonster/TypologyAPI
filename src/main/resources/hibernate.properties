#-----------------------------------------------------------------------------------
#Hibernate--------------------------------------------------------------------------
#-----------------------------------------------------------------------------------
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


#spring.jpa.properties.hibernate.format_sql=true		
#spring.jpa.properties.hibernate.connection.isolation=2
#spring.jpa.properties.hibernate.jdbc.batch_size=10
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory

#spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE
#spring.data.jpa.repositories.bootstrap-mode=default





#using logger for sql statements
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=trace
#logging.level.org.hibernate.type=TRACE
#logging.level.net.sf.ehcache=debug







# Performance
spring.jpa.properties.hibernate.jdbc.batch_size=10

# Second Level Cache - Ehcache

#1. enable second level cache
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.query_cache=true

#2. specify the caching framework - JCache
# https://northcoder.com/post/setting-up-hibernate-with-jcache-an/
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory

#3. Only cache what I tell to cache.
spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE

logging.level.net.sf.ehcache=debug



#update schema
#recommended to use 'none' in PROD, or unspecified
#create or create-drop if needing to drop/create on startup
spring.jpa.hibernate.ddl-auto=none




#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true	#what's happening in the background
logging.level.org.hibernate.stat=debug

# Show all queries						
#do not enable in prod. whenever you want to customize something in hibernate, attach spring.jpa.properties to it
#a table called Course is being created. Spring Boot autoconfiguration- when spring sees an embedded database is being used,
#assumes you want Hibernate to create the schema for you
#so it turns something called "create schema" on, and creates all the tables that are needed
spring.jpa.properties.hibernate.format_sql=true		
logging.level.org.hibernate.type=trace
spring.jpa.properties.hibernate.connection.isolation=2





#naming strategy for hibernate so that it doesn't add underscore to table name, creating new table
#this is not working, try it if needed
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl